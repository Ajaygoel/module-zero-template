@using Abp.MultiTenancy
@using Abp.Web.Mvc.Extensions
@using Microsoft.Owin.Security
@model AbpCompanyName.AbpProjectName.WebSpaAngular.Models.Account.LoginFormViewModel
@section Styles
{
    @Html.IncludeStyle("~/Views/Account/Login.css")
}
@section Scripts
{
    @Html.IncludeScript("~/Views/Account/Login.js")
}

<div class="card">
    <div class="body">
        <form id="LoginForm" method="POST" asp-action="Login">
            <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
            <input type="hidden" name="returnUrlHash" />
            <h4 class="text-center">@L("LogIn")</h4>
            <div class="input-group">
                <span class="input-group-addon">
                    <i class="material-icons">person</i>
                </span>
                <div class="form-line">
                    <input type="text" class="form-control" name="UsernameOrEmailAddress" placeholder="@L("UserNameOrEmail")" required autofocus maxlength="100">
                </div>
            </div>
            <div class="input-group">
                <span class="input-group-addon">
                    <i class="material-icons">lock</i>
                </span>
                <div class="form-line">
                    <input type="password" class="form-control" name="Password" placeholder="@L("Password")" required maxlength="100">
                </div>
            </div>
            <div class="row">
                <div class="col-xs-8 p-t-5">
                    <input type="checkbox" name="RememberMe" id="rememberme" class="filled-in chk-col-pink" value="true">
                    <label for="rememberme">@L("RememberMe")</label>
                </div>
                <div class="col-xs-4">
                    <button id="LoginButton" class="btn btn-block bg-pink waves-effect" type="submit">@L("LogIn")</button>
                </div>
            </div>
            @if (Model.IsSelfRegistrationAllowed)
            {
                <div class="row m-t-15 m-b--20">
                    <div class="col-xs-12">
                        <a href="@Url.Action("Register", "Account")">@L("Register")</a>
                    </div>
                </div>
            }
        </form>

        @{
            var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes().ToList();

            Func<string, string> getSocialIconClass = (provider) =>
            {
                provider = provider.ToLowerInvariant();

                if (provider == "microsoft")
                {
                    return "windows";
                }

                return provider;
            };
        }

        @if (Model.MultiTenancySide == MultiTenancySides.Tenant && loginProviders.Count > 0)
        {
            <div class="login-options">
                <h4>@L("LoginWith")</h4>
                <ul class="social-icons">
                    @using (Html.BeginForm("ExternalLogin", "Account", method: FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
                        <input type="hidden" name="provider" value="" />

                        foreach (AuthenticationDescription p in loginProviders)
                        {
                            <a class="btn btn-default btn-sm fa fa-@getSocialIconClass(p.AuthenticationType) social-login-link"
                               title="@p.AuthenticationType"
                               data-provider="@p.AuthenticationType"
                               href="javascript:;"></a>
                        }
                    }
                </ul>
            </div>
        }

    </div>
</div>